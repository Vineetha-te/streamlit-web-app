# -*- coding: utf-8 -*-
"""Credit-risk-analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-2yYbvTSJ8OiMLy2R_QSEbqOEbNwnGEk
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

xlfile = pd.ExcelFile('credit-risk.xlsx')

sheets=[]
for name in xlfile.sheet_names:
   if name not in ('Description','Sheet8'):
    sheets.append(name)

data_dic =pd.read_excel(xlfile,sheet_name = sheets)
credits_df = pd.DataFrame()

credits_df = pd.concat(data_dic.values())
credits_df.shape

credits_df.describe()

credits_df.drop('No',inplace=True,axis=1)
credits_df.head()

credits_df.dropna(inplace=True)
credits_df.info()

credits_df.to_csv('/credit-risk.csv',index=False)



import plotly.express as px, pydeck as pdk, pingouin as pg
import ipywidgets as widgets, scipy.stats as stats,re
from sklearn.preprocessing import OneHotEncoder

countries_df = pd.read_csv('/countries.csv')[['name','alpha-2']]
cities_df = pd.read_csv('/world-cities.tar.txt',low_memory=False)[['City','Country','Latitude','Longitude']]

cities_df.head()

countries_df['alpha-2'] = countries_df['alpha-2'].str.lower()
countries_df = countries_df.rename(columns={'name':'Country','alpha-2':'Country-Code'})
cities_df['City'] = cities_df['City'].str.capitalize()
cities_df= cities_df.rename(columns={'Country':'Country-Code'})
countries_df.isnull().sum()

company_locations = credits_df[['Company name','Region','Country']].merge(countries_df,on = 'Country',)
company_locations = company_locations.rename(columns={'Region':'City'})
company_locations = company_locations.merge(cities_df,on=['City','Country-Code'])
company_locations.head()

# adding gausian noise

company_locations['Latitude']+= np.random.normal(0,0.03,len(company_locations))
company_locations['Longitude']+= np.random.normal(0,0.03,len(company_locations))

# visualizing using widget

import streamlit as st

st.set_page_config(page_title='Credit Risk Analysis',layout='wide')
st.title('Credit Risk Analysis')
st.markdown("Company Locations Visualization")

vis_widget = st.radio('Select the visualization type',['Density Mapbox','Hexagon Layer'])


if vis_widget=='Density Mapbox':
  map_box_token = 'pk.eyJ1IjoiZGVtb3VzZXIiLCJhIjoiY2t2M2Vjc2t3MDFuejJ2cG01aG1qZ2RzZyJ9.HhNwH4W5cZp6Iu3t2kF1QQ'
  px.set_mapbox_access_token(map_box_token)
  fig = px.density_mapbox(company_locations,lat='Latitude',lon='Longitude',radius=1.2,center=dict(lat=46.2,lon=8.2),mapbox_style='open-street-map',zoom=3,hover_name='Company name')
  st.plotly_chart(fig,use_container_width=True)
else:
   layer = pdk.Layer('HexagonLayer',
                    company_locations,
                    get_position=('Latitude','Longitude'),
                    extruded = True,
                    elevation_scale =100,
                    elevation_range=[0,5000],
                    pickable = True,
                    coverage = 3,
                    auto_highlight = True

                    )
   view_state = pdk.ViewState(longitude=7,latitude=43,zoom=4,pitch=40.5,bearing=16)
   fig = pdk.Deck(layers=layer,initial_view_state=view_state)
   st.pydeck_chart(fig)

